{"version":3,"sources":["components/Content/styles/content.js","components/Menu/styles/menu.js","components/Menu/index.js","components/Sidebar/styles/sidebar.js","components/Sidebar/index.js","components/Content/index.js","components/Header/styles/header.js","components/Header/index.js","App.js","reportWebVitals.js","global-styles.js","index.js"],"names":["MainLayout","styled","div","MainContentSection","section","TopContainer","TopWrapper","ConfirmedWrap","DeathWrap","RecoveredWrap","CheckerWrap","H3","h3","Figure","confirmed","recovered","checker","IncreaseWrap","Increase","UpIcon","AiOutlineArrowUp","MiddleContainer","MiddleWrapper","TodayConfirmedWrap","TodayConfirmedP","TodayConfirmedFigure","h2","VsWrapper","VsWrap","VsDate","BottomContainer","ContentH2","ContentsContainer","ContentsWrapper","ChartInputWrapper","ChartInput","input","ChartLabel","label","MenuSection","TopH1","ul","MenuLiWrap","MenuIcon1","GiSouthKorea","MenuIcon2","IoEarthSharp","MenuIcon3","RiPinDistanceLine","MenuIcon4","BsFillQuestionDiamondFill","MenuLi","li","Select","ReactFlagsSelect","BottomWrapper","Icon","DarkModeWrap","DarkModeText","DarkModeTrigger","Menu","setSelected","setSearchCountry","selected","onClick","countries","searchable","onSelect","code","Container","openMenu","CloseIcon","MdCancel","MenuWrapper","Wrapper","Sidebar","setOpenMenu","Content","useState","showChart","setShowChart","searchCountry","confirmedData","setConfirmedData","todayData","setTodayData","coupleDayData","setCoupleDayData","activeData","setActiveData","entireData","setEntireData","useEffect","fetchEvents","a","axios","get","data","manuFactureData","console","log","length","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","Confirmed","active","Active","death","Deaths","Recovered","findItem","find","item","push","labels","map","value","last","datasets","backgroundColor","fill","borderWidth","borderColor","fontColor","Math","abs","checked","id","type","name","onChange","e","target","htmlFor","options","legend","display","position","padding","scales","xAxes","ticks","yAxes","HeaderContainer","MenuBars","FaBars","HeaderH1","h1","Header","select","option","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66f09abf.chunk.js","sourcesContent":["import styled from 'styled-components/macro';\r\nimport { AiOutlineArrowUp } from 'react-icons/ai';\r\n\r\nexport const MainLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const MainContentSection = styled.section`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  max-width: 510px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    order: 2;\r\n  }\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 0 20px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const TopWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const ConfirmedWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const DeathWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const RecoveredWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const CheckerWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  font-size: 12px;\r\n  color: rgb(183, 193, 204);\r\n  margin: 0;\r\n`;\r\n\r\nexport const Figure = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 5px 0 10px 0;\r\n  color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : 'rgb(183, 193, 204)'};\r\n`;\r\nexport const IncreaseWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgba(235, 83, 116, 0.082)'\r\n      : recovered\r\n      ? 'rgba(22, 171, 22, 0.082)'\r\n      : checker\r\n      ? 'rgba(86, 115, 235, 0.082)'\r\n      : 'rgb(39, 43, 56)'};\r\n  border-radius: 12px;\r\n  padding: 0 6px;\r\n`;\r\n\r\nexport const Increase = styled.div`\r\n  font-size: 11.5px;\r\n  font-weight: bold;\r\n  color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : 'rgb(183, 193, 204)'};\r\n  margin-right: 4px;\r\n`;\r\n\r\nexport const UpIcon = styled(AiOutlineArrowUp)`\r\n  color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : 'rgb(183, 193, 204)'};\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const MiddleContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  margin-top: 18px;\r\n  padding: 0 20px;\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const MiddleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  padding: 12px 0;\r\n`;\r\n\r\nexport const TodayConfirmedWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TodayConfirmedP = styled.div`\r\n  color: rgb(183, 193, 204);\r\n  font-size: 12px;\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 8px;\r\n  }\r\n`;\r\n\r\nexport const TodayConfirmedFigure = styled.h2`\r\n  color: rgb(207, 207, 207);\r\n  font-size: 32px;\r\n  margin: 4px 0;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 28px;\r\n  }\r\n`;\r\n\r\nexport const VsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const VsWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const VsDate = styled.div`\r\n  color: rgb(183, 193, 204);\r\n  font-size: 12px;\r\n  margin-right: 6px;\r\n`;\r\n\r\nexport const VsFigure = styled.div`\r\n  font-size: 12px;\r\n  margin-left: 6px;\r\n  background: rgba(235, 83, 116, 0.082);\r\n  color: rgb(235, 83, 116);\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 12px 20px;\r\n  margin-top: 18px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const ContentH2 = styled.div`\r\n  color: rgb(207, 207, 207);\r\n  padding: 14px 14px 20px 5px;\r\n`;\r\n\r\nexport const ContentsContainer = styled.div``;\r\n\r\nexport const ContentsWrapper = styled.div``;\r\n\r\nexport const ChartInputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px;\r\n`;\r\nexport const ChartInput = styled.input`\r\n  background-color: black;\r\n  outline: none;\r\n  color: pink;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::after {\r\n    width: 9px;\r\n    height: 9px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: #d1d3d1;\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 2px solid white;\r\n  }\r\n  &:checked::after {\r\n    width: 9px;\r\n    height: 9px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: rgb(16, 20, 33);\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 2px solid white;\r\n  }\r\n`;\r\nexport const ChartLabel = styled.label`\r\n  color: rgb(207, 207, 207);\r\n  margin-right: 12px;\r\n  user-select: none;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`;\r\n","import styled from 'styled-components/macro';\r\nimport { IoEarthSharp } from 'react-icons/io5';\r\nimport { GiSouthKorea } from 'react-icons/gi';\r\nimport { BsFillQuestionDiamondFill } from 'react-icons/bs';\r\nimport { RiPinDistanceLine } from 'react-icons/ri';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nexport const MenuSection = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 280px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    order: 1;\r\n    max-width: 510px;\r\n  }\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const TopWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const TopH1 = styled.h2`\r\n  margin: 12px 0;\r\n  color: rgb(183, 193, 204);\r\n`;\r\n\r\nexport const MiddleContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  margin-top: 18px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MiddleWrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\nexport const MenuLiWrap = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\nexport const MenuIcon1 = styled(GiSouthKorea)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon2 = styled(IoEarthSharp)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon3 = styled(RiPinDistanceLine)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon4 = styled(BsFillQuestionDiamondFill)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuLi = styled.li`\r\n  color: rgb(183, 193, 204);\r\n  list-style: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n`;\r\nexport const Select = styled(ReactFlagsSelect)`\r\n  padding: 0;\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  width: 100%;\r\n  background-color: rgb(25, 31, 44);\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 12px 20px;\r\n  margin-top: 18px;\r\n`;\r\n\r\nexport const BottomWrapper = styled.div``;\r\n\r\nexport const Icon = styled.div``;\r\n\r\nexport const DarkModeWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const DarkModeText = styled.div`\r\n  color: rgb(183, 193, 204);\r\n  list-style: none;\r\n`;\r\n\r\nexport const DarkModeTrigger = styled.div`\r\n  color: rgb(183, 193, 204);\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  BottomWrapper,\r\n  DarkModeText,\r\n  DarkModeTrigger,\r\n  DarkModeWrap,\r\n  Icon,\r\n  MenuLi,\r\n  MenuSection,\r\n  BottomContainer,\r\n  MiddleContainer,\r\n  MiddleWrapper,\r\n  TopContainer,\r\n  TopWrapper,\r\n  TopH1,\r\n  MenuLiWrap,\r\n  MenuIcon1,\r\n  MenuIcon3,\r\n  MenuIcon4,\r\n  Select,\r\n  MenuIcon2,\r\n} from './styles/menu';\r\n\r\nconst Menu = ({ setSelected, setSearchCountry, selected }) => {\r\n  return (\r\n    <MenuSection>\r\n      <TopContainer>\r\n        <TopWrapper>\r\n          <TopH1>CORONA</TopH1>\r\n        </TopWrapper>\r\n      </TopContainer>\r\n      <MiddleContainer>\r\n        <MiddleWrapper>\r\n          <MenuLiWrap>\r\n            <MenuIcon1 />\r\n            <MenuLi\r\n              onClick={() => {\r\n                setSelected('KR');\r\n                setSearchCountry('KR');\r\n              }}>\r\n              국내\r\n            </MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon2 />\r\n            <Select\r\n              countries={[\r\n                'KR',\r\n                'JP',\r\n                'CA',\r\n                'GB',\r\n                'FR',\r\n                'CH',\r\n                'DE',\r\n                'IT',\r\n                'AU',\r\n                'IN',\r\n                'RU',\r\n                'TW',\r\n                'BR',\r\n                'DK',\r\n                'TH',\r\n                'VN',\r\n                'PH',\r\n              ]}\r\n              searchable\r\n              selected={selected}\r\n              onSelect={(code) => {\r\n                setSelected(code);\r\n                setSearchCountry(code);\r\n              }}\r\n            />\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon3 />\r\n            <MenuLi>거리두기</MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon4 />\r\n            <MenuLi>자주 묻는 질문</MenuLi>\r\n          </MenuLiWrap>\r\n        </MiddleWrapper>\r\n      </MiddleContainer>\r\n      <BottomContainer>\r\n        <BottomWrapper>\r\n          <DarkModeWrap>\r\n            <Icon />\r\n            <DarkModeText>다크모드</DarkModeText>\r\n            <DarkModeTrigger>?</DarkModeTrigger>\r\n          </DarkModeWrap>\r\n        </BottomWrapper>\r\n      </BottomContainer>\r\n    </MenuSection>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components/macro';\r\nimport { MdCancel } from 'react-icons/md';\r\nimport { GiSouthKorea } from 'react-icons/gi';\r\nimport { IoEarthSharp } from 'react-icons/io5';\r\nimport { RiPinDistanceLine } from 'react-icons/ri';\r\nimport { BsFillQuestionDiamondFill } from 'react-icons/bs';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nexport const Container = styled.div`\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 100%;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb(16, 20, 33);\r\n  transition: 0.3s ease-in-out;\r\n  display: ${({ openMenu }) => (openMenu ? 'block' : 'none')};\r\n  left: ${({ openMenu }) => (openMenu ? '0' : '100%')};\r\n`;\r\n\r\nexport const CloseIcon = styled(MdCancel)`\r\n  position: absolute;\r\n  right: 25px;\r\n  top: 25px;\r\n  font-size: 30px;\r\n  z-index: 9999;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MenuLiWrap = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n`;\r\nexport const MenuIcon1 = styled(GiSouthKorea)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon2 = styled(IoEarthSharp)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon3 = styled(RiPinDistanceLine)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon4 = styled(BsFillQuestionDiamondFill)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuLi = styled.li`\r\n  color: rgb(183, 193, 204);\r\n  list-style: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n`;\r\nexport const Select = styled(ReactFlagsSelect)`\r\n  padding: 0;\r\n`;\r\n","import React from 'react';\r\n\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  MenuWrapper,\r\n  Wrapper,\r\n  MenuIcon1,\r\n  MenuIcon2,\r\n  MenuIcon3,\r\n  MenuIcon4,\r\n  MenuLi,\r\n  MenuLiWrap,\r\n  Select,\r\n} from './styles/sidebar';\r\n\r\nconst Sidebar = ({\r\n  openMenu,\r\n  setOpenMenu,\r\n  selected,\r\n  setSelected,\r\n  setSearchCountry,\r\n}) => {\r\n  return (\r\n    <Container openMenu={openMenu}>\r\n      <CloseIcon\r\n        onClick={() => {\r\n          setOpenMenu(!openMenu);\r\n        }}\r\n      />\r\n      <Wrapper>\r\n        <MenuWrapper>\r\n          <MenuLiWrap>\r\n            <MenuIcon1 />\r\n            <MenuLi\r\n              onClick={() => {\r\n                setSelected('KR');\r\n                setSearchCountry('KR');\r\n                setOpenMenu(false);\r\n              }}>\r\n              국내\r\n            </MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon2 />\r\n            <Select\r\n              countries={[\r\n                'KR',\r\n                'JP',\r\n                'CA',\r\n                'GB',\r\n                'FR',\r\n                'CH',\r\n                'DE',\r\n                'IT',\r\n                'AU',\r\n                'IN',\r\n                'RU',\r\n                'TW',\r\n                'BR',\r\n                'DK',\r\n                'TH',\r\n                'VN',\r\n                'PH',\r\n              ]}\r\n              searchable\r\n              selected={selected}\r\n              onSelect={(code) => {\r\n                setSelected(code);\r\n                setSearchCountry(code);\r\n                setOpenMenu(false);\r\n              }}\r\n            />\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon3 />\r\n            <MenuLi>거리두기</MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon4 />\r\n            <MenuLi>자주 묻는 질문</MenuLi>\r\n          </MenuLiWrap>\r\n        </MenuWrapper>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport {\r\n  MainContentSection,\r\n  TopContainer,\r\n  MiddleContainer,\r\n  BottomContainer,\r\n  TopWrapper,\r\n  Figure,\r\n  H3,\r\n  Increase,\r\n  ConfirmedWrap,\r\n  DeathWrap,\r\n  CheckerWrap,\r\n  RecoveredWrap,\r\n  MainLayout,\r\n  MiddleWrapper,\r\n  TodayConfirmedWrap,\r\n  TodayConfirmedP,\r\n  TodayConfirmedFigure,\r\n  VsWrapper,\r\n  VsWrap,\r\n  VsDate,\r\n  ContentH2,\r\n  ContentsContainer,\r\n  ContentsWrapper,\r\n  UpIcon,\r\n  IncreaseWrap,\r\n  ChartLabel,\r\n  ChartInput,\r\n  ChartInputWrapper,\r\n} from './styles/content';\r\nimport Menu from '../Menu';\r\nimport Sidebar from '../Sidebar';\r\n\r\nconst Content = ({ openMenu, setOpenMenu }) => {\r\n  const [selected, setSelected] = useState('KR');\r\n  const [showChart, setShowChart] = useState('Bar');\r\n  const [searchCountry, setSearchCountry] = useState('kr');\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [todayData, setTodayData] = useState({});\r\n  const [coupleDayData, setCoupleDayData] = useState({});\r\n  const [activeData, setActiveData] = useState({});\r\n  const [entireData, setEntireData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const { data } = await axios.get(\r\n        `https://api.covid19api.com/dayone/country/${searchCountry}`,\r\n      );\r\n      manuFactureData(data);\r\n      console.log(data);\r\n      setTodayData(data[data.length - 1]);\r\n      setCoupleDayData(data[data.length - 2]);\r\n    };\r\n\r\n    const manuFactureData = (data) => {\r\n      const arr = data.reduce((acc, cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear();\r\n        const month = currentDate.getMonth();\r\n        const date = currentDate.getDate();\r\n        const confirmed = cur.Confirmed; // 확진자\r\n        const active = cur.Active; // 격리자\r\n        const death = cur.Deaths; // 사망\r\n        const recovered = cur.Recovered; // 완치\r\n\r\n        const findItem = acc.find(\r\n          (item) => item.year === year && item.month === month,\r\n        );\r\n        if (!findItem) {\r\n          acc.push({\r\n            year,\r\n            month,\r\n            date,\r\n            confirmed,\r\n            active,\r\n            death,\r\n            recovered,\r\n          });\r\n        }\r\n        if (findItem && findItem.date < date) {\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = date;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n\r\n        return acc;\r\n      }, []);\r\n      const labels = arr.map((value) => `${value.month + 1}월`);\r\n      const confirmed = arr.map((value) => value.confirmed);\r\n      const active = arr.map((value) => value.active);\r\n      const last = arr[arr.length - 1];\r\n\r\n      setConfirmedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${selected} 누적 확진자`,\r\n            backgroundColor: 'salmon',\r\n            fill: true,\r\n            data: confirmed,\r\n          },\r\n        ],\r\n      });\r\n      setActiveData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${selected} 격리자`,\r\n            backgroundColor: 'rgb(86, 115, 235)',\r\n            fill: false,\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(86, 115, 235)',\r\n            data: active,\r\n          },\r\n        ],\r\n      });\r\n      setEntireData({\r\n        labels: ['확진자', '완치자', '사망'],\r\n        datasets: [\r\n          {\r\n            fontColor: '#fff',\r\n            backgroundColor: ['#ff3d67', '#059dff', '#ffc233'],\r\n            borderColor: ['#ff3d67', '#059dff', '#ffc233'],\r\n            fill: false,\r\n            data: [last.confirmed, last.recovered, last.death],\r\n          },\r\n        ],\r\n      });\r\n    };\r\n    fetchEvents();\r\n  }, [selected, searchCountry]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <MainContentSection>\r\n        <TopContainer>\r\n          <TopWrapper>\r\n            <ConfirmedWrap>\r\n              <H3>확진자</H3>\r\n              <Figure confirmed='true'>{todayData.Confirmed}</Figure>\r\n              <IncreaseWrap confirmed='true'>\r\n                <Increase confirmed='true'>\r\n                  {Math.abs(todayData.Confirmed - coupleDayData.Confirmed)}\r\n                </Increase>\r\n                <UpIcon confirmed='true' />\r\n              </IncreaseWrap>\r\n            </ConfirmedWrap>\r\n            <DeathWrap>\r\n              <H3>사망자</H3>\r\n              <Figure>{todayData.Deaths}</Figure>\r\n              <IncreaseWrap>\r\n                <Increase>\r\n                  {Math.abs(todayData.Deaths - coupleDayData.Deaths)}\r\n                </Increase>\r\n                <UpIcon />\r\n              </IncreaseWrap>\r\n            </DeathWrap>\r\n            <RecoveredWrap>\r\n              <H3>완치자</H3>\r\n              <Figure recovered='true'>{todayData.Recovered}</Figure>\r\n              <IncreaseWrap recovered='true'>\r\n                <Increase recovered='true'>\r\n                  {Math.abs(todayData.Recovered - coupleDayData.Recovered)}\r\n                </Increase>\r\n                <UpIcon recovered='true' />\r\n              </IncreaseWrap>\r\n            </RecoveredWrap>\r\n            <CheckerWrap>\r\n              <H3>검사자</H3>\r\n              <Figure checker='true'>100,070</Figure>\r\n              <IncreaseWrap checker='true'>\r\n                <Increase checker='true'>494</Increase>\r\n                <UpIcon checker='true' />\r\n              </IncreaseWrap>\r\n            </CheckerWrap>\r\n          </TopWrapper>\r\n        </TopContainer>\r\n        <MiddleContainer>\r\n          <MiddleWrapper>\r\n            <TodayConfirmedWrap>\r\n              <TodayConfirmedP>오늘 확진자수</TodayConfirmedP>\r\n              <TodayConfirmedFigure>\r\n                {Math.abs(todayData.Confirmed - coupleDayData.Confirmed)}명\r\n              </TodayConfirmedFigure>\r\n            </TodayConfirmedWrap>\r\n            <VsWrapper>\r\n              <VsWrap>\r\n                <VsDate>vs 어제</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>25</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n              <VsWrap>\r\n                <VsDate>vs 1주전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>23</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n            </VsWrapper>\r\n\r\n            <VsWrapper>\r\n              <VsWrap>\r\n                <VsDate>vs 2주전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>25</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n              <VsWrap>\r\n                <VsDate>vs 1달전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>102</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n            </VsWrapper>\r\n          </MiddleWrapper>\r\n        </MiddleContainer>\r\n        <BottomContainer>\r\n          <ContentsContainer>\r\n            <ChartInputWrapper>\r\n              <ChartInput\r\n                checked={showChart === 'Bar' ? true : false}\r\n                id='Bar'\r\n                type='radio'\r\n                name='chart'\r\n                value='Bar'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Bar'>누적 통계</ChartLabel>\r\n              <ChartInput\r\n                checked={showChart === 'Line' ? true : false}\r\n                id='Line'\r\n                type='radio'\r\n                name='chart'\r\n                value='Line'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Line'>격리자 통계</ChartLabel>\r\n              <ChartInput\r\n                checked={showChart === 'Doughnut' ? true : false}\r\n                id='Doughnut'\r\n                type='radio'\r\n                name='chart'\r\n                value='Doughnut'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Doughnut'>전체 통계</ChartLabel>\r\n            </ChartInputWrapper>\r\n            {showChart === 'Bar' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 누적확진자 현황</ContentH2>\r\n                <Bar\r\n                  data={confirmedData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: '누적 확진자 추이',\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor: 'rgb(183, 193, 204)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor: 'rgb(183, 193, 204)',\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor: 'rgb(183, 193, 204)',\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : showChart === 'Line' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 누적격리자 현황</ContentH2>\r\n                <Line\r\n                  data={activeData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: '누적 확진자 추이',\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor: 'rgb(183, 193, 204)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor: 'rgb(183, 193, 204)',\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor: 'rgb(183, 193, 204)',\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : showChart === 'Doughnut' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 현황</ContentH2>\r\n                <Doughnut\r\n                  data={entireData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: `누적, 확진, 해제, 사망 (${\r\n                          new Date().getMonth() + 1\r\n                        }월)`,\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor: 'rgb(183, 193, 204)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : null}\r\n          </ContentsContainer>\r\n        </BottomContainer>\r\n      </MainContentSection>\r\n      <Menu\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setSearchCountry={setSearchCountry}\r\n      />\r\n      <Sidebar\r\n        setOpenMenu={setOpenMenu}\r\n        openMenu={openMenu}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setSearchCountry={setSearchCountry}\r\n      />\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { FaBars } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  position: relative;\r\n  background-color: rgb(25, 31, 44);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  align-items: center;\r\n`;\r\nexport const MenuBars = styled(FaBars)`\r\n  display: none;\r\n  position: absolute;\r\n  color: #fff;\r\n  font-size: 22px;\r\n  right: 30px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const HeaderH1 = styled.h1`\r\n  color: rgb(183, 193, 204);\r\n`;\r\nexport const HeaderSelect = styled.select`\r\n  height: 30px;\r\n  width: 140px;\r\n  border-radius: 5px;\r\n  border: none;\r\n`;\r\nexport const HeaderOption = styled.option``;\r\n// export const Header = styled.div``;\r\n","import React from 'react';\r\nimport { HeaderContainer, HeaderH1, MenuBars } from './styles/header';\r\n\r\nconst Header = ({ setOpenMenu, openMenu }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderH1>COVID-19</HeaderH1>\r\n      <MenuBars\r\n        onClick={() => {\r\n          setOpenMenu(!openMenu);\r\n        }}\r\n      />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\nimport Content from './components/Content';\nimport Header from './components/Header';\n\nfunction App() {\n  const [openMenu, setOpenMenu] = useState(false);\n\n  return (\n    <>\n      <Header setOpenMenu={setOpenMenu} openMenu={openMenu} />\n      <Content openMenu={openMenu} setOpenMenu={setOpenMenu} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700&display=swap');\r\n\r\n* {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(16, 20, 33);\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.ReactFlagsSelect-module_flagsSelect__2pfa2 {\r\n  width: 100% !important;\r\n}\r\n.ReactFlagsSelect-module_label__27pw9 {\r\n  color: rgb(183,193,204);\r\n}\r\n.ReactFlagsSelect-module_selectOptions__3LNBJ {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_filterBox__3m8EU {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_selectOption__3pcgW {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_selectOptions__3LNBJ {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n\r\n::-webkit-scrollbar{width: 8px;}\r\n::-webkit-scrollbar-track {  background-color: rgb(25, 31, 44);\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    background: rgba(126, 129, 134, 0.753);\r\n    border-radius: 4px;\r\n}\r\n::-webkit-scrollbar-thumb:hover {   background-color: rgb(183,193,204);\r\n}\r\n@media screen and (max-width: 480px) {\r\n  .chartjs-render-monitor {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyles } from './global-styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}