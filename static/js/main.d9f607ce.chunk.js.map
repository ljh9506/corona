{"version":3,"sources":["components/Content/styles/content.js","components/Menu/styles/menu.js","components/Menu/index.js","components/Sidebar/styles/sidebar.js","components/Sidebar/index.js","components/Content/index.js","global-styles.js","components/Header/styles/header.js","App.js","reportWebVitals.js","index.js"],"names":["MainLayout","styled","div","MainContentSection","section","TopContainer","theme","bodyBgColor","TopWrapper","ConfirmedWrap","DeathWrap","RecoveredWrap","CheckerWrap","H3","h3","fontColor","Figure","confirmed","recovered","checker","IncreaseWrap","Increase","UpIcon","AiOutlineArrowUp","MiddleContainer","MiddleWrapper","TodayConfirmedWrap","TodayConfirmedP","TodayConfirmedFigure","h2","VsWrapper","VsWrap","VsDate","BottomContainer","ContentH2","ContentsContainer","ContentsWrapper","ChartInputWrapper","ChartInput","input","ChartLabel","label","MenuSection","MenuBars","FaBars","TopH1","ul","MenuLiWrap","MenuIcon1","GiSouthKorea","MenuIcon2","IoEarthSharp","MenuIcon3","RiPinDistanceLine","MenuIcon4","BsFillQuestionDiamondFill","MenuLi","li","Select","ReactFlagsSelect","BottomWrapper","DarkModeWrap","DarkModeLabel","span","DarkModeSwitchWrap","DarkModeSwitch","darkMode","css","DarkModeText","ToggleIcon","Menu","setSelected","setSearchCountry","selected","toggleTheme","setOpenMenu","openMenu","useState","setDarkMode","onClick","countries","searchable","onSelect","code","size","Container","CloseIcon","MdCancel","MenuWrapper","Wrapper","Sidebar","Content","showChart","setShowChart","searchCountry","confirmedData","setConfirmedData","todayData","setTodayData","coupleDayData","setCoupleDayData","activeData","setActiveData","entireData","setEntireData","useEffect","fetchEvents","a","axios","get","data","manuFactureData","console","log","length","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","Confirmed","active","Active","death","Deaths","Recovered","findItem","find","item","push","labels","map","value","last","datasets","backgroundColor","fill","borderWidth","borderColor","Math","abs","checked","id","type","name","onChange","e","target","htmlFor","options","legend","display","position","padding","scales","xAxes","ticks","yAxes","fontSize","GlobalStyles","h1","select","option","createGlobalStyle","themeStyle","dark","light","App","setTheme","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9f607ce.chunk.js","sourcesContent":["import styled from 'styled-components/macro';\r\nimport { AiOutlineArrowUp } from 'react-icons/ai';\r\n\r\nexport const MainLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 0;\r\n  }\r\n`;\r\nexport const MainContentSection = styled.section`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  max-width: 510px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    order: 2;\r\n  }\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 0 20px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const TopWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const ConfirmedWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const DeathWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const RecoveredWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const CheckerWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.fontColor};\r\n  margin: 0;\r\n`;\r\n\r\nexport const Figure = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 5px 0 10px 0;\r\n  color: ${({ confirmed, recovered, checker, theme }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : theme.fontColor};\r\n`;\r\nexport const IncreaseWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgba(235, 83, 116, 0.082)'\r\n      : recovered\r\n      ? 'rgba(22, 171, 22, 0.082)'\r\n      : checker\r\n      ? 'rgba(86, 115, 235, 0.082)'\r\n      : 'rgb(39, 43, 56)'};\r\n  border-radius: 12px;\r\n  padding: 0 6px;\r\n`;\r\n\r\nexport const Increase = styled.div`\r\n  font-size: 11.5px;\r\n  font-weight: bold;\r\n  color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : 'rgb(183, 193, 204)'};\r\n  margin-right: 4px;\r\n`;\r\n\r\nexport const UpIcon = styled(AiOutlineArrowUp)`\r\n  color: ${({ confirmed, recovered, checker }) =>\r\n    confirmed\r\n      ? 'rgb(235, 83, 116)'\r\n      : recovered\r\n      ? 'rgb(23, 138, 23)'\r\n      : checker\r\n      ? 'rgb(86, 115, 235)'\r\n      : 'rgb(183, 193, 204)'};\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const MiddleContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  margin-top: 18px;\r\n  padding: 0 20px;\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n    margin-top: 6px;\r\n  }\r\n`;\r\n\r\nexport const MiddleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  padding: 12px 0;\r\n`;\r\n\r\nexport const TodayConfirmedWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TodayConfirmedP = styled.div`\r\n  color: ${({ theme }) => theme.fontColor};\r\n  font-size: 12px;\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 8px;\r\n  }\r\n`;\r\n\r\nexport const TodayConfirmedFigure = styled.h2`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  font-size: 32px;\r\n  margin: 4px 0;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 28px;\r\n  }\r\n`;\r\n\r\nexport const VsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const VsWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const VsDate = styled.div`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  font-size: 12px;\r\n  margin-right: 6px;\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 12px 20px;\r\n  margin-top: 18px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n    margin-top: 6px;\r\n  }\r\n`;\r\n\r\nexport const ContentH2 = styled.div`\r\n  color: ${({ theme }) => theme.fontColor};\r\n  font-weight: bold;\r\n  padding: 14px 14px 20px 5px;\r\n`;\r\n\r\nexport const ContentsContainer = styled.div``;\r\n\r\nexport const ContentsWrapper = styled.div``;\r\n\r\nexport const ChartInputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px;\r\n`;\r\nexport const ChartInput = styled.input`\r\n  background-color: black;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::after {\r\n    width: 9px;\r\n    height: 9px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: #d1d3d1;\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 2px solid white;\r\n  }\r\n  &:checked::after {\r\n    width: 9px;\r\n    height: 9px;\r\n    border-radius: 15px;\r\n    top: -2px;\r\n    left: -1px;\r\n    position: relative;\r\n    background-color: rgb(16, 20, 33);\r\n    content: '';\r\n    display: inline-block;\r\n    visibility: visible;\r\n    border: 2px solid white;\r\n  }\r\n`;\r\nexport const ChartLabel = styled.label`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  margin-right: 12px;\r\n  user-select: none;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`;\r\n","import styled, { css } from 'styled-components/macro';\r\nimport { IoEarthSharp } from 'react-icons/io5';\r\nimport { GiSouthKorea } from 'react-icons/gi';\r\nimport { BsFillQuestionDiamondFill } from 'react-icons/bs';\r\nimport { RiPinDistanceLine } from 'react-icons/ri';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport { FaBars } from 'react-icons/fa';\r\n\r\nexport const MenuSection = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 280px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 750px) {\r\n    order: 1;\r\n    max-width: 510px;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 0 20px;\r\n`;\r\nexport const MenuBars = styled(FaBars)`\r\n  display: none;\r\n  position: absolute;\r\n  color: ${({ theme }) => theme.fontColor};\r\n  font-size: 22px;\r\n  right: 28px;\r\n  top: 28px;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    display: block;\r\n  }\r\n`;\r\nexport const TopWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const TopH1 = styled.h2`\r\n  margin: 12px 0;\r\n  color: ${({ theme }) => theme.fontColor};\r\n`;\r\n\r\nexport const MiddleContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  margin-top: 18px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MiddleWrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\nexport const MenuLiWrap = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\nexport const MenuIcon1 = styled(GiSouthKorea)`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon2 = styled(IoEarthSharp)`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon3 = styled(RiPinDistanceLine)`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon4 = styled(BsFillQuestionDiamondFill)`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuLi = styled.li`\r\n  color: ${({ theme }) => theme.fontColor};\r\n\r\n  list-style: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n`;\r\nexport const Select = styled(ReactFlagsSelect)`\r\n  padding: 0;\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyBgColor};\r\n\r\n  border: 1px solid rgba(207, 207, 207, 0.25);\r\n  border-radius: 16px;\r\n  padding: 12px 20px;\r\n  margin-top: 18px;\r\n`;\r\n\r\nexport const BottomWrapper = styled.div``;\r\nexport const DarkModeWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nexport const DarkModeLabel = styled.span`\r\n  color: ${({ theme }) => theme.fontColor};\r\n`;\r\nexport const DarkModeSwitchWrap = styled.div`\r\n  position: relative;\r\n  width: 55px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n`;\r\nexport const DarkModeSwitch = styled.div`\r\n  position: absolute;\r\n  top: 1px;\r\n  left: 0px;\r\n  width: 23px;\r\n  height: 23px;\r\n  background-color: #fff;\r\n  border-radius: 100%;\r\n  transition: left 0.3s;\r\n\r\n  ${({ darkMode }) =>\r\n    darkMode &&\r\n    css`\r\n      left: 31px;\r\n    `}\r\n`;\r\nexport const DarkModeText = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${({ darkMode }) => (darkMode ? '#3dbf87' : '#fc3164')};\r\n  border-radius: 25px;\r\n  box-shadow: 2px 2px 5px 0 rgba(50, 50, 50, 0.75);\r\n  transition: background-color 0.3s;\r\n`;\r\n\r\nexport const ToggleIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 25px;\r\n  width: 35%;\r\n  line-height: 25px;\r\n  color: #fff;\r\n  & + & {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\nimport {\r\n  BottomWrapper,\r\n  DarkModeText,\r\n  DarkModeWrap,\r\n  DarkModeSwitch,\r\n  ToggleIcon,\r\n  DarkModeSwitchWrap,\r\n  MenuLi,\r\n  MenuSection,\r\n  BottomContainer,\r\n  MiddleContainer,\r\n  MiddleWrapper,\r\n  TopContainer,\r\n  TopWrapper,\r\n  TopH1,\r\n  MenuLiWrap,\r\n  MenuIcon1,\r\n  MenuIcon3,\r\n  MenuIcon4,\r\n  Select,\r\n  MenuIcon2,\r\n  DarkModeLabel,\r\n  MenuBars,\r\n} from './styles/menu';\r\n\r\nconst Menu = ({\r\n  setSelected,\r\n  setSearchCountry,\r\n  selected,\r\n  toggleTheme,\r\n  setOpenMenu,\r\n  openMenu,\r\n}) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  return (\r\n    <MenuSection>\r\n      <TopContainer>\r\n        <TopWrapper>\r\n          <TopH1>CORONA</TopH1>\r\n        </TopWrapper>\r\n        <MenuBars\r\n          onClick={() => {\r\n            setOpenMenu(!openMenu);\r\n          }}\r\n        />\r\n      </TopContainer>\r\n      <MiddleContainer>\r\n        <MiddleWrapper>\r\n          <MenuLiWrap>\r\n            <MenuIcon1 />\r\n            <MenuLi\r\n              onClick={() => {\r\n                setSelected('KR');\r\n                setSearchCountry('KR');\r\n              }}>\r\n              국내\r\n            </MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon2 />\r\n            <Select\r\n              countries={[\r\n                'KR',\r\n                'JP',\r\n                'CA',\r\n                'GB',\r\n                'FR',\r\n                'CH',\r\n                'DE',\r\n                'IT',\r\n                'AU',\r\n                'IN',\r\n                'RU',\r\n                'TW',\r\n                'BR',\r\n                'DK',\r\n                'TH',\r\n                'VN',\r\n                'PH',\r\n              ]}\r\n              searchable\r\n              selected={selected}\r\n              onSelect={(code) => {\r\n                setSelected(code);\r\n                setSearchCountry(code);\r\n              }}\r\n            />\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon3 />\r\n            <MenuLi>거리두기</MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon4 />\r\n            <MenuLi>자주 묻는 질문</MenuLi>\r\n          </MenuLiWrap>\r\n        </MiddleWrapper>\r\n      </MiddleContainer>\r\n      <BottomContainer>\r\n        <BottomWrapper>\r\n          <DarkModeWrap\r\n            onClick={() => {\r\n              setDarkMode(!darkMode);\r\n              toggleTheme();\r\n            }}>\r\n            <DarkModeLabel>다크모드</DarkModeLabel>\r\n            <DarkModeSwitchWrap>\r\n              <DarkModeSwitch darkMode={darkMode} />\r\n              <DarkModeText darkMode={darkMode}>\r\n                <ToggleIcon>\r\n                  <FaMoon size='20' />\r\n                </ToggleIcon>\r\n                <ToggleIcon>\r\n                  <FaSun size='20' />\r\n                </ToggleIcon>\r\n              </DarkModeText>\r\n            </DarkModeSwitchWrap>\r\n          </DarkModeWrap>\r\n        </BottomWrapper>\r\n      </BottomContainer>\r\n    </MenuSection>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components/macro';\r\nimport { MdCancel } from 'react-icons/md';\r\nimport { GiSouthKorea } from 'react-icons/gi';\r\nimport { IoEarthSharp } from 'react-icons/io5';\r\nimport { RiPinDistanceLine } from 'react-icons/ri';\r\nimport { BsFillQuestionDiamondFill } from 'react-icons/bs';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nexport const Container = styled.div`\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 100%;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb(16, 20, 33);\r\n  transition: 0.3s ease-in-out;\r\n  display: ${({ openMenu }) => (openMenu ? 'block' : 'none')};\r\n  left: ${({ openMenu }) => (openMenu ? '0' : '100%')};\r\n`;\r\n\r\nexport const CloseIcon = styled(MdCancel)`\r\n  position: absolute;\r\n  right: 25px;\r\n  top: 25px;\r\n  font-size: 30px;\r\n  z-index: 9999;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MenuLiWrap = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n`;\r\nexport const MenuIcon1 = styled(GiSouthKorea)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon2 = styled(IoEarthSharp)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon3 = styled(RiPinDistanceLine)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuIcon4 = styled(BsFillQuestionDiamondFill)`\r\n  color: rgb(183, 193, 204);\r\n  margin-right: 12px;\r\n`;\r\nexport const MenuLi = styled.li`\r\n  color: rgb(183, 193, 204);\r\n  list-style: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n`;\r\nexport const Select = styled(ReactFlagsSelect)`\r\n  padding: 0;\r\n`;\r\n","import React from 'react';\r\n\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  MenuWrapper,\r\n  Wrapper,\r\n  MenuIcon1,\r\n  MenuIcon2,\r\n  MenuIcon3,\r\n  MenuIcon4,\r\n  MenuLi,\r\n  MenuLiWrap,\r\n  Select,\r\n} from './styles/sidebar';\r\n\r\nconst Sidebar = ({\r\n  openMenu,\r\n  setOpenMenu,\r\n  selected,\r\n  setSelected,\r\n  setSearchCountry,\r\n}) => {\r\n  return (\r\n    <Container openMenu={openMenu}>\r\n      <CloseIcon\r\n        onClick={() => {\r\n          setOpenMenu(!openMenu);\r\n        }}\r\n      />\r\n      <Wrapper>\r\n        <MenuWrapper>\r\n          <MenuLiWrap>\r\n            <MenuIcon1 />\r\n            <MenuLi\r\n              onClick={() => {\r\n                setSelected('KR');\r\n                setSearchCountry('KR');\r\n                setOpenMenu(false);\r\n              }}>\r\n              국내\r\n            </MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon2 />\r\n            <Select\r\n              countries={[\r\n                'KR',\r\n                'JP',\r\n                'CA',\r\n                'GB',\r\n                'FR',\r\n                'CH',\r\n                'DE',\r\n                'IT',\r\n                'AU',\r\n                'IN',\r\n                'RU',\r\n                'TW',\r\n                'BR',\r\n                'DK',\r\n                'TH',\r\n                'VN',\r\n                'PH',\r\n              ]}\r\n              searchable\r\n              selected={selected}\r\n              onSelect={(code) => {\r\n                setSelected(code);\r\n                setSearchCountry(code);\r\n                setOpenMenu(false);\r\n              }}\r\n            />\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon3 />\r\n            <MenuLi>거리두기</MenuLi>\r\n          </MenuLiWrap>\r\n          <MenuLiWrap>\r\n            <MenuIcon4 />\r\n            <MenuLi>자주 묻는 질문</MenuLi>\r\n          </MenuLiWrap>\r\n        </MenuWrapper>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport {\r\n  MainContentSection,\r\n  TopContainer,\r\n  MiddleContainer,\r\n  BottomContainer,\r\n  TopWrapper,\r\n  Figure,\r\n  H3,\r\n  Increase,\r\n  ConfirmedWrap,\r\n  DeathWrap,\r\n  CheckerWrap,\r\n  RecoveredWrap,\r\n  MainLayout,\r\n  MiddleWrapper,\r\n  TodayConfirmedWrap,\r\n  TodayConfirmedP,\r\n  TodayConfirmedFigure,\r\n  VsWrapper,\r\n  VsWrap,\r\n  VsDate,\r\n  ContentH2,\r\n  ContentsContainer,\r\n  ContentsWrapper,\r\n  UpIcon,\r\n  IncreaseWrap,\r\n  ChartLabel,\r\n  ChartInput,\r\n  ChartInputWrapper,\r\n} from './styles/content';\r\nimport Menu from '../Menu';\r\nimport Sidebar from '../Sidebar';\r\n\r\nconst Content = ({ openMenu, setOpenMenu, toggleTheme, theme }) => {\r\n  const [selected, setSelected] = useState('KR');\r\n  const [showChart, setShowChart] = useState('Bar');\r\n  const [searchCountry, setSearchCountry] = useState('kr');\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [todayData, setTodayData] = useState({});\r\n  const [coupleDayData, setCoupleDayData] = useState({});\r\n  const [activeData, setActiveData] = useState({});\r\n  const [entireData, setEntireData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const { data } = await axios.get(\r\n        `https://api.covid19api.com/dayone/country/${searchCountry}`,\r\n      );\r\n      manuFactureData(data);\r\n      console.log(data);\r\n      setTodayData(data[data.length - 1]);\r\n      setCoupleDayData(data[data.length - 2]);\r\n    };\r\n\r\n    const manuFactureData = (data) => {\r\n      const arr = data.reduce((acc, cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear();\r\n        const month = currentDate.getMonth();\r\n        const date = currentDate.getDate();\r\n        const confirmed = cur.Confirmed; // 확진자\r\n        const active = cur.Active; // 격리자\r\n        const death = cur.Deaths; // 사망\r\n        const recovered = cur.Recovered; // 완치\r\n\r\n        const findItem = acc.find(\r\n          (item) => item.year === year && item.month === month,\r\n        );\r\n        if (!findItem) {\r\n          acc.push({\r\n            year,\r\n            month,\r\n            date,\r\n            confirmed,\r\n            active,\r\n            death,\r\n            recovered,\r\n          });\r\n        }\r\n        if (findItem && findItem.date < date) {\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = date;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n\r\n        return acc;\r\n      }, []);\r\n      const labels = arr.map((value) => `${value.month + 1}월`);\r\n      const confirmed = arr.map((value) => value.confirmed);\r\n      const active = arr.map((value) => value.active);\r\n      const last = arr[arr.length - 1];\r\n\r\n      setConfirmedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${selected} 누적 확진자`,\r\n            backgroundColor: 'salmon',\r\n            fill: true,\r\n            data: confirmed,\r\n          },\r\n        ],\r\n      });\r\n      setActiveData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${selected} 격리자`,\r\n            backgroundColor: 'rgb(86, 115, 235)',\r\n            fill: false,\r\n            borderWidth: 1,\r\n            borderColor: 'rgb(86, 115, 235)',\r\n            data: active,\r\n          },\r\n        ],\r\n      });\r\n      setEntireData({\r\n        labels: ['확진자', '완치자', '사망'],\r\n        datasets: [\r\n          {\r\n            fontColor: '#fff',\r\n            backgroundColor: ['#ff3d67', '#059dff', '#ffc233'],\r\n            borderColor: ['#ff3d67', '#059dff', '#ffc233'],\r\n            fill: false,\r\n            data: [last.confirmed, last.recovered, last.death],\r\n          },\r\n        ],\r\n      });\r\n    };\r\n    fetchEvents();\r\n  }, [selected, searchCountry]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <MainContentSection>\r\n        <TopContainer>\r\n          <TopWrapper>\r\n            <ConfirmedWrap>\r\n              <H3>확진자</H3>\r\n              <Figure confirmed='true'>{todayData.Confirmed}</Figure>\r\n              <IncreaseWrap confirmed='true'>\r\n                <Increase confirmed='true'>\r\n                  {Math.abs(todayData.Confirmed - coupleDayData.Confirmed)}\r\n                </Increase>\r\n                <UpIcon confirmed='true' />\r\n              </IncreaseWrap>\r\n            </ConfirmedWrap>\r\n            <DeathWrap>\r\n              <H3>사망자</H3>\r\n              <Figure>{todayData.Deaths}</Figure>\r\n              <IncreaseWrap>\r\n                <Increase>\r\n                  {Math.abs(todayData.Deaths - coupleDayData.Deaths)}\r\n                </Increase>\r\n                <UpIcon />\r\n              </IncreaseWrap>\r\n            </DeathWrap>\r\n            <RecoveredWrap>\r\n              <H3>완치자</H3>\r\n              <Figure recovered='true'>{todayData.Recovered}</Figure>\r\n              <IncreaseWrap recovered='true'>\r\n                <Increase recovered='true'>\r\n                  {Math.abs(todayData.Recovered - coupleDayData.Recovered)}\r\n                </Increase>\r\n                <UpIcon recovered='true' />\r\n              </IncreaseWrap>\r\n            </RecoveredWrap>\r\n            <CheckerWrap>\r\n              <H3>검사자</H3>\r\n              <Figure checker='true'>100,070</Figure>\r\n              <IncreaseWrap checker='true'>\r\n                <Increase checker='true'>494</Increase>\r\n                <UpIcon checker='true' />\r\n              </IncreaseWrap>\r\n            </CheckerWrap>\r\n          </TopWrapper>\r\n        </TopContainer>\r\n        <MiddleContainer>\r\n          <MiddleWrapper>\r\n            <TodayConfirmedWrap>\r\n              <TodayConfirmedP>오늘 확진자수</TodayConfirmedP>\r\n              <TodayConfirmedFigure>\r\n                {Math.abs(todayData.Confirmed - coupleDayData.Confirmed)}명\r\n              </TodayConfirmedFigure>\r\n            </TodayConfirmedWrap>\r\n            <VsWrapper>\r\n              <VsWrap>\r\n                <VsDate>vs 어제</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>25</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n              <VsWrap>\r\n                <VsDate>vs 1주전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>23</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n            </VsWrapper>\r\n\r\n            <VsWrapper>\r\n              <VsWrap>\r\n                <VsDate>vs 2주전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>25</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n              <VsWrap>\r\n                <VsDate>vs 1달전</VsDate>\r\n                <IncreaseWrap confirmed='true'>\r\n                  <Increase confirmed='true'>102</Increase>\r\n                  <UpIcon confirmed='true' />\r\n                </IncreaseWrap>\r\n              </VsWrap>\r\n            </VsWrapper>\r\n          </MiddleWrapper>\r\n        </MiddleContainer>\r\n        <BottomContainer>\r\n          <ContentsContainer>\r\n            <ChartInputWrapper>\r\n              <ChartInput\r\n                checked={showChart === 'Bar' ? true : false}\r\n                id='Bar'\r\n                type='radio'\r\n                name='chart'\r\n                value='Bar'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Bar'>누적 통계</ChartLabel>\r\n              <ChartInput\r\n                checked={showChart === 'Line' ? true : false}\r\n                id='Line'\r\n                type='radio'\r\n                name='chart'\r\n                value='Line'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Line'>격리자 통계</ChartLabel>\r\n              <ChartInput\r\n                checked={showChart === 'Doughnut' ? true : false}\r\n                id='Doughnut'\r\n                type='radio'\r\n                name='chart'\r\n                value='Doughnut'\r\n                onChange={(e) => setShowChart(e.target.value)}\r\n              />\r\n              <ChartLabel htmlFor='Doughnut'>전체 통계</ChartLabel>\r\n            </ChartInputWrapper>\r\n            {showChart === 'Bar' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 누적확진자 현황</ContentH2>\r\n                <Bar\r\n                  data={confirmedData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: '누적 확진자 추이',\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor:\r\n                            theme === 'dark'\r\n                              ? 'rgb(183, 193, 204)'\r\n                              : 'rgb(70,77,82)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor:\r\n                                theme === 'dark'\r\n                                  ? 'rgb(183, 193, 204)'\r\n                                  : 'rgb(70,77,82)',\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor:\r\n                                theme === 'dark'\r\n                                  ? 'rgb(183, 193, 204)'\r\n                                  : 'rgb(70,77,82)',\r\n                              fontSize: '9',\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : showChart === 'Line' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 누적격리자 현황</ContentH2>\r\n                <Line\r\n                  data={activeData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: '누적 확진자 추이',\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor:\r\n                            theme === 'dark'\r\n                              ? 'rgb(183, 193, 204)'\r\n                              : 'rgb(70,77,82)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor:\r\n                                theme === 'dark'\r\n                                  ? 'rgb(183, 193, 204)'\r\n                                  : 'rgb(70,77,82)',\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            ticks: {\r\n                              fontColor:\r\n                                theme === 'dark'\r\n                                  ? 'rgb(183, 193, 204)'\r\n                                  : 'rgb(70,77,82)',\r\n                              fontSize: '9',\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : showChart === 'Doughnut' ? (\r\n              <ContentsWrapper>\r\n                <ContentH2>{selected} 코로나 현황</ContentH2>\r\n                <Doughnut\r\n                  data={entireData}\r\n                  options={\r\n                    ({\r\n                      title: {\r\n                        display: true,\r\n                        text: `누적, 확진, 해제, 사망 (${\r\n                          new Date().getMonth() + 1\r\n                        }월)`,\r\n                        fontSize: 16,\r\n                      },\r\n                    },\r\n                    {\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'bottom',\r\n                        labels: {\r\n                          fontColor:\r\n                            theme === 'dark'\r\n                              ? 'rgb(183, 193, 204)'\r\n                              : 'rgb(70,77,82)',\r\n                          padding: 20,\r\n                        },\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              </ContentsWrapper>\r\n            ) : null}\r\n          </ContentsContainer>\r\n        </BottomContainer>\r\n      </MainContentSection>\r\n      <Menu\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setSearchCountry={setSearchCountry}\r\n        toggleTheme={toggleTheme}\r\n        openMenu={openMenu}\r\n        setOpenMenu={setOpenMenu}\r\n      />\r\n      <Sidebar\r\n        setOpenMenu={setOpenMenu}\r\n        openMenu={openMenu}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setSearchCountry={setSearchCountry}\r\n      />\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700&display=swap');\r\n\r\n* {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(16, 20, 33);\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.ReactFlagsSelect-module_flagsSelect__2pfa2 {\r\n  width: 100% !important;\r\n}\r\n.ReactFlagsSelect-module_label__27pw9 {\r\n  color: rgb(183,193,204);\r\n}\r\n.ReactFlagsSelect-module_selectOptions__3LNBJ {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_filterBox__3m8EU {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_selectOption__3pcgW {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n.ReactFlagsSelect-module_selectOptions__3LNBJ {\r\n  background-color: rgb(25, 31, 44);\r\n}\r\n\r\n::-webkit-scrollbar{width: 8px;}\r\n::-webkit-scrollbar-track {  background-color: rgb(25, 31, 44);\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    background: rgba(126, 129, 134, 0.753);\r\n    border-radius: 4px;\r\n}\r\n::-webkit-scrollbar-thumb:hover {   background-color: rgb(183,193,204);\r\n}\r\n@media screen and (max-width: 480px) {\r\n  .chartjs-render-monitor {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  position: relative;\r\n  background-color: rgb(25, 31, 44);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  align-items: center;\r\n`;\r\n\r\nexport const HeaderH1 = styled.h1`\r\n  color: rgb(183, 193, 204);\r\n`;\r\nexport const HeaderSelect = styled.select`\r\n  height: 30px;\r\n  width: 140px;\r\n  border-radius: 5px;\r\n  border: none;\r\n`;\r\nexport const HeaderOption = styled.option``;\r\n// export const Header = styled.div``;\r\n","import { useState } from 'react';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './global-styles';\n\nconst themeStyle = {\n  dark: {\n    bodyBgColor: 'rgb(16, 20, 33)',\n    fontColor: 'rgb(183, 193, 204);',\n    backgroundColor: 'rgb(16, 20, 33)',\n  },\n  light: {\n    bodyBgColor: 'rgb(255, 255, 255)',\n    fontColor: 'rgb(70, 77, 82);',\n    backgroundColor: 'rgba(246, 246, 246, 0.5);',\n  },\n};\n\nfunction App() {\n  const [openMenu, setOpenMenu] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const toggleTheme = () => {\n    setTheme((prevState) => (prevState === 'dark' ? 'light' : 'dark'));\n  };\n\n  return (\n    <ThemeProvider theme={themeStyle[theme]}>\n      <GlobalStyles />\n      <Content\n        theme={theme}\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        toggleTheme={toggleTheme}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}